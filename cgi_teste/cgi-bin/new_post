#!/usr/bin/python3
import cgi 
import sqlite3 # import librairy pour sqlite  
import hashlib # importe librairy pour hashage 

import time
import uuid # importe librairy pour creation id 
import http.cookies # importe librairy pour creation id
import os 

# Fichier de cookie
SESSION_DIR = "/tmp/session"
os.makedirs(SESSION_DIR, exist_ok=True)

# Cr√©er une instance de cookie
cookie = http.cookies.SimpleCookie(os.environ.get("HTTP_COOKIE"))
session_id = cookie.get("session_id")

# Creation du fichier sqlite3 
base = sqlite3.connect("data/database.sqlite3")
cursor = base.cursor()

# Creation de table sql Users
cursor.execute("""
    CREATE TABLE IF NOT EXISTS Users (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        admin INTEGER,
        user VARCHAR(64),
        password VARCHAR(255),
        dt DATETIME DEFAULT CURRENT_TIMESTAMP
    )
""")

# Creation de la table Sessions
cursor.execute("""
    CREATE TABLE IF NOT EXISTS Sessions(
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        id_user INTEGER,
        finish INTEGER,
        session VARCHAR(64),
        creation DATETIME DEFAULT CURRENT_TIMESTAMP,
        ip VARCHAR(64),
        FOREIGN KEY (id_user) REFERENCES users(id)
    )
""")

# Creation de la table Posts
cursor.execute("""CREATE TABLE IF NOT EXISTS Posts(
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        id_user INTEGER,
        creation DATETIME DEFAULT CURRENT_TIMESTAMP,
        titel VARCHAR(64),
        texte VARCHAR(1024)
    )
""")

if not session_id:
    print("Content-Type: text/html")  # Type de contenu
    print("Location: http://python.org/")  # URL de destination pour la redirection
    print("""
    <!DOCTYPE html>
    <html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Document</title> 
        <meta http-equiv="refresh" content='0; URL=index'>
    </head>
    <body>
        
    </body>
    </html>""")
    exit()

form =  cgi.FieldStorage() # Recuperation POST 
if "titre" in form and "post" in form:
    titre = form["titre"].value.strip()
    posts = form["post"].value.strip()
    
    cursor.execute("SELECT * FROM Users INNER JOIN Sessions ON Users.id = Sessions.id_user WHERE Sessions.session = ?",
    (session_id.value,))
    resulta = cursor.fetchone()

    cursor.execute("INSERT INTO Posts (id_user,titel, texte) VALUES (?,?, ?)", (resulta[0],titre, posts))
    base.commit()

print("Content-Type: text/html")
print("""
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>

<body>
    <form method="post">
        
        <label for="Titre">Titre du Posts</label><br>
        <input type="text" name="titre" id="titre">
        <br>
        <textarea name="post" id="post" rows="12" cols="35">Ecriver votre post</textarea><br>
        
        <input type="submit">
    </form>
</body>
</html>
</html>
""")